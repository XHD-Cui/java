public class LoginTwoWayServer {
	public static void main(String[] args) throws IOException {
		//创建服务器
		System.out.println("-----server-----");
		//1、指定端口 ServerSocket创建服务器
			ServerSocket server = new ServerSocket(8888);
			boolean isRuning = true;
		//2、阻塞式等待联系 accept
			while(isRuning) {
				Socket client = server.accept();
				System.out.println("一个客户端建立了链接");
				new Thread(new Channel(client)).start();
			}
			
		//3、操作：输入输出流操作
		//4、释放资源
			server.close();
	}
	
	static class Channel implements Runnable{
		private Socket client;
		private DataOutputStream dos;
		private DataInputStream dis;
		public Channel(Socket client){
			this.client = client;
			try {
				dos = new DataOutputStream(client.getOutputStream());
				dis = new DataInputStream(client.getInputStream());
			} catch (IOException e) {
				e.printStackTrace();
				release();
			}
			
		}
		
		//得到数据
		private String receive() {
			String datas="";
			try {
				datas = dis.readUTF();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return datas;
		}
		
		//发送数据
		private void sand(String meg){
			try {
				dos.writeUTF(meg);
				dos.flush();
			} catch (IOException e) {
				e.printStackTrace();
			}
			
		}
		
		//释放资源
		private void release() {
			try {
				if(null != dos) {
					dos.close();
				}
				
			} catch (IOException e) {
				e.printStackTrace();
			}
			try {
				if(null != dis) {
					dis.close();
				}
			} catch (IOException e) {
				e.printStackTrace();
			}
			try {
				if(null != client) {
					client.close();
				}
			} catch (IOException e) {
				e.printStackTrace();
			}
			
		}
		
		@Override
		public void run() {
			String uname ="";
			String upass ="";
			String[] data = receive().split("&");
			for(String info:data) {
				String[] usinfo = info.split(":");
				if(usinfo[0].equals("uname")) {
					System.out.println("你发送的用户名为："+usinfo[1]);
					uname = usinfo[1];
				}else if(usinfo[0].equals("upass")) {
					System.out.println("你发送的密码为："+usinfo[1]);
					upass = usinfo[1];
				}
			}
			if(uname.equals("cxy") && upass.equals("123456")) {
				sand("登陆成功！");
			}else {
				sand("请确认用户名或者密码");
			}
			release();
		}
		
	}

}